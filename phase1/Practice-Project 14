// Java Ptogram to Demonstrate Sleep() and Wait() // 

package sample; 

public class SleepWaitDemo {

	    public static void main(String[] args) throws InterruptedException {

	        // Create two threads

	        Thread thread1 = new Thread(new MyRunnable1());
	        Thread thread2 = new Thread(new MyRunnable2());

	        // Start the threads

	        thread1.start();
	        thread2.start();

	        
	        thread1.join();           // Wait for thread 1 to finish its sleep

	        // Notify thread 2 (it's waiting on obj)

	        synchronized (obj) {
	            obj.notify();
	        }

	      
	        thread2.join();          // Wait for thread 2 to finish

	        System.out.println("Both threads finished.");
	    }

	    static Object obj = new Object();

	    static class MyRunnable1 implements Runnable {

	        @Override
	        public void run() {
	            System.out.println("Thread 1: Sleeping for 5 seconds...");
	            try {
	                Thread.sleep(5000); // Sleep for 5 seconds using sleep()
	            } catch (InterruptedException e) {
	                e.printStackTrace();
	            }
	            System.out.println("Thread 1: Woke up!");
	        }
	    }

	    static class MyRunnable2 implements Runnable {

	        @Override
	        public void run() {
	            synchronized (obj) {
	                System.out.println("Thread 2: Waiting on obj...");
	                try {
	                    obj.wait(); // Wait on obj using wait()
	                } catch (InterruptedException e) {
	                    e.printStackTrace();
	                }
	                System.out.println("Thread 2: Notified and continuing!");
	            }
	        }
	    }
	}

