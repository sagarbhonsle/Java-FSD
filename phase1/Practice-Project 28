 // Java Program to Add Element in the Circular Linked LIst //

package sample;

 class Node1 {
    int data;
    Node next;

    Node1(int data) {
        this.data = data;
        this.next = null;
    }
}

public class SortedCircularLL {

    private Node head;

    public void insert(int data) {
        Node newNode = new Node(data);

        // Case 1: Empty list

        if (head == null) {
            newNode.next = newNode;
            head = newNode;
            return;
        }

        // Case 2: Insert at the beginning

        if (data < head.data) {
            newNode.next = head.next;
            head.next = newNode;
            return;
        }

        // Case 3: Insert in the middle or at the end

        Node current = head;
        while (current.next != head && current.next.data < data) {
            current = current.next;
        }

        newNode.next = current.next;
        current.next = newNode;
    }

    public void printList() {
        if (head == null) {
            System.out.println("List is empty.");
            return;
        }

        Node current = head;
        do {
            System.out.print(current.data + " -> ");
            current = current.next;
        } while (current != head);
        System.out.println("HEAD");
    }

    public static void main(String[] args) {
        SortedCircularLL list = new SortedCircularLL();

        list.insert(2);
        list.insert(6);
        list.insert(1);
        list.insert(3);

        list.printList();
    }
}
